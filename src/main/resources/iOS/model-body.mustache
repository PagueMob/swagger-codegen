#import "{{&name}}.h"
{{newline}}
@implementation {{&name}}
{{newline}}
- (id) initWithValues: (NSDictionary*)dict {
    {{#properties}}
    {{newline}}
    {{#type}}
    {{^isContainer}}{{^isComplex}}[self {{&setter}}:[dict objectForKey:@"{{&propertyName}}"]];{{/isComplex}}{{/isContainer}}
    {{#isComplex}}[self {{&setter}}:[[[{{&typeName}} alloc] init] initWithValues:[dict objectForKey:@"{{&propertyName}}"]]];{{/isComplex}}
    {{#isContainer}}NSMutableArray* {{&propertyName}} = [[NSMutableArray alloc] init];
    for(int i=0; i< [[dict objectForKey:@"{{&propertyName}}"] count]; i++) {
        [{{&propertyName}} addObject:[[{{#dataRef}}{{&typeName}} {{/dataRef}}alloc] initWithValues:[[dict objectForKey:@"{{&propertyName}}"] objectAtIndex:i]]];
    }
    [self {{&setter}}:{{&propertyName}}];
{{/isContainer}}
{{/type}}
{{/properties}}
{{newline}}
    return self;
}
{{newline}}
- (NSDictionary*) toDictionary{
    NSMutableDictionary * dict = [[NSMutableDictionary alloc] init];
    {{#properties}}
    {{newline}}
    {{#type}}
    {{^isContainer}}{{^isComplex}}if([self {{&propertyName}}] != nil) [dict setObject:[self {{&propertyName}}] forKey:@"{{&propertyName}}"];{{/isComplex}}{{/isContainer}}
    {{#isComplex}}if([self {{&propertyName}}] != nil) [dict setObject:[[self {{&propertyName}}] toDictionary] forKey:@"{{&propertyName}}"];{{/isComplex}}
    {{#isContainer}}if([self {{&propertyName}}] != nil) {
        NSMutableArray * {{&propertyName}} = [[NSMutableArray alloc] init];
        for(int i =0; i < [[self {{&propertyName}}] count]; i++){
            [{{&propertyName}} addObject:[[[self {{&propertyName}}] objectAtIndex:i] toDictionary]];
        }
        [dict setObject:{{&propertyName}} forKey:@"{{&propertyName}}"];
    }
{{/isContainer}}
{{/type}}
{{/properties}}
{{newline}}
    return dict;
}
{{newline}}
@end
